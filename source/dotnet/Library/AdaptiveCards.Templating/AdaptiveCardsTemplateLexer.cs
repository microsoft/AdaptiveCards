//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from AdaptiveCardsTemplateLexer.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class AdaptiveCardsTemplateLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		COMMA=1, COLON=2, LCB=3, RCB=4, LSB=5, RSB=6, TRUE=7, FALSE=8, NULL=9, 
		StringDeclOpen=10, NUMBER=11, WS=12, CLOSE=13, TEMPLATEDATA=14, TEMPLATEWHEN=15, 
		JPATH=16, TEMPLATELITERAL=17, TEMPLATEROOT=18, STRING=19;
	public const int
		INSIDE=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "INSIDE"
	};

	public static readonly string[] ruleNames = {
		"COMMA", "COLON", "LCB", "RCB", "LSB", "RSB", "TRUE", "FALSE", "NULL", 
		"StringDeclOpen", "NUMBER", "INT", "EXP", "WS", "CLOSE", "TEMPLATEDATA", 
		"TEMPLATEWHEN", "JPATH", "TEMPLATELITERAL", "TEMPLATEROOT", "STRING", 
		"ESC", "UNICODE", "HEX", "SAFECODEPOINT"
	};


	public AdaptiveCardsTemplateLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public AdaptiveCardsTemplateLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "','", "':'", "'{'", "'}'", "'['", "']'", "'true'", "'false'", "'null'", 
		null, null, null, null, "'$data'", "'$when'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "COMMA", "COLON", "LCB", "RCB", "LSB", "RSB", "TRUE", "FALSE", "NULL", 
		"StringDeclOpen", "NUMBER", "WS", "CLOSE", "TEMPLATEDATA", "TEMPLATEWHEN", 
		"JPATH", "TEMPLATELITERAL", "TEMPLATEROOT", "STRING"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "AdaptiveCardsTemplateLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static AdaptiveCardsTemplateLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x15', '\xC6', '\b', '\x1', '\b', '\x1', '\x4', '\x2', 
		'\t', '\x2', '\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', 
		'\x5', '\t', '\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', 
		'\x4', '\b', '\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', 
		'\x4', '\v', '\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', 
		'\x4', '\xE', '\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', 
		'\x10', '\x4', '\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', 
		'\x13', '\t', '\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', 
		'\x15', '\x4', '\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', 
		'\x18', '\t', '\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', 
		'\x1A', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', 
		'\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', 
		'\v', '\x3', '\f', '\x5', '\f', 'X', '\n', '\f', '\x3', '\f', '\x3', '\f', 
		'\x3', '\f', '\x6', '\f', ']', '\n', '\f', '\r', '\f', '\xE', '\f', '^', 
		'\x5', '\f', '\x61', '\n', '\f', '\x3', '\f', '\x5', '\f', '\x64', '\n', 
		'\f', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\a', '\r', 'i', '\n', '\r', 
		'\f', '\r', '\xE', '\r', 'l', '\v', '\r', '\x5', '\r', 'n', '\n', '\r', 
		'\x3', '\xE', '\x3', '\xE', '\x5', '\xE', 'r', '\n', '\xE', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xF', '\x6', '\xF', 'w', '\n', '\xF', '\r', '\xF', 
		'\xE', '\xF', 'x', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', 
		'\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', 
		'\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', 
		'\x6', '\x13', '\x93', '\n', '\x13', '\r', '\x13', '\xE', '\x13', '\x94', 
		'\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', 
		'\x3', '\x14', '\x3', '\x14', '\a', '\x14', '\x9E', '\n', '\x14', '\f', 
		'\x14', '\xE', '\x14', '\xA1', '\v', '\x14', '\x3', '\x14', '\x3', '\x14', 
		'\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', 
		'\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', 
		'\x3', '\x16', '\x3', '\x16', '\x6', '\x16', '\xB1', '\n', '\x16', '\r', 
		'\x16', '\xE', '\x16', '\xB2', '\x3', '\x16', '\x5', '\x16', '\xB6', '\n', 
		'\x16', '\x3', '\x17', '\x3', '\x17', '\x3', '\x17', '\x5', '\x17', '\xBB', 
		'\n', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x18', '\x3', '\x18', 
		'\x3', '\x18', '\x3', '\x18', '\x3', '\x19', '\x3', '\x19', '\x3', '\x1A', 
		'\x3', '\x1A', '\x3', '\x9F', '\x2', '\x1B', '\x4', '\x3', '\x6', '\x4', 
		'\b', '\x5', '\n', '\x6', '\f', '\a', '\xE', '\b', '\x10', '\t', '\x12', 
		'\n', '\x14', '\v', '\x16', '\f', '\x18', '\r', '\x1A', '\x2', '\x1C', 
		'\x2', '\x1E', '\xE', ' ', '\xF', '\"', '\x10', '$', '\x11', '&', '\x12', 
		'(', '\x13', '*', '\x14', ',', '\x15', '.', '\x2', '\x30', '\x2', '\x32', 
		'\x2', '\x34', '\x2', '\x4', '\x2', '\x3', '\v', '\x3', '\x2', '\x32', 
		';', '\x3', '\x2', '\x33', ';', '\x4', '\x2', 'G', 'G', 'g', 'g', '\x4', 
		'\x2', '-', '-', '/', '/', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', 
		'\"', '\x3', '\x2', '$', '$', '\n', '\x2', '$', '$', '\x31', '\x31', '^', 
		'^', '\x64', '\x64', 'h', 'h', 'p', 'p', 't', 't', 'v', 'v', '\x5', '\x2', 
		'\x32', ';', '\x43', 'H', '\x63', 'h', '\x6', '\x2', '\x2', '!', '$', 
		'$', '&', '&', '^', '^', '\x2', '\xCE', '\x2', '\x4', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x6', '\x3', '\x2', '\x2', '\x2', '\x2', '\b', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\n', '\x3', '\x2', '\x2', '\x2', '\x2', '\f', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\xE', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x10', '\x3', '\x2', '\x2', '\x2', '\x2', '\x12', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x14', '\x3', '\x2', '\x2', '\x2', '\x2', '\x16', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x18', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x1E', '\x3', '\x2', '\x2', '\x2', '\x3', ' ', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\"', '\x3', '\x2', '\x2', '\x2', '\x3', '$', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '&', '\x3', '\x2', '\x2', '\x2', '\x3', '(', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '*', '\x3', '\x2', '\x2', '\x2', '\x3', ',', '\x3', 
		'\x2', '\x2', '\x2', '\x4', '\x36', '\x3', '\x2', '\x2', '\x2', '\x6', 
		'\x38', '\x3', '\x2', '\x2', '\x2', '\b', ':', '\x3', '\x2', '\x2', '\x2', 
		'\n', '<', '\x3', '\x2', '\x2', '\x2', '\f', '>', '\x3', '\x2', '\x2', 
		'\x2', '\xE', '@', '\x3', '\x2', '\x2', '\x2', '\x10', '\x42', '\x3', 
		'\x2', '\x2', '\x2', '\x12', 'G', '\x3', '\x2', '\x2', '\x2', '\x14', 
		'M', '\x3', '\x2', '\x2', '\x2', '\x16', 'R', '\x3', '\x2', '\x2', '\x2', 
		'\x18', 'W', '\x3', '\x2', '\x2', '\x2', '\x1A', 'm', '\x3', '\x2', '\x2', 
		'\x2', '\x1C', 'o', '\x3', '\x2', '\x2', '\x2', '\x1E', 'v', '\x3', '\x2', 
		'\x2', '\x2', ' ', '|', '\x3', '\x2', '\x2', '\x2', '\"', '\x80', '\x3', 
		'\x2', '\x2', '\x2', '$', '\x86', '\x3', '\x2', '\x2', '\x2', '&', '\x92', 
		'\x3', '\x2', '\x2', '\x2', '(', '\x98', '\x3', '\x2', '\x2', '\x2', '*', 
		'\xA4', '\x3', '\x2', '\x2', '\x2', ',', '\xB5', '\x3', '\x2', '\x2', 
		'\x2', '.', '\xB7', '\x3', '\x2', '\x2', '\x2', '\x30', '\xBC', '\x3', 
		'\x2', '\x2', '\x2', '\x32', '\xC2', '\x3', '\x2', '\x2', '\x2', '\x34', 
		'\xC4', '\x3', '\x2', '\x2', '\x2', '\x36', '\x37', '\a', '.', '\x2', 
		'\x2', '\x37', '\x5', '\x3', '\x2', '\x2', '\x2', '\x38', '\x39', '\a', 
		'<', '\x2', '\x2', '\x39', '\a', '\x3', '\x2', '\x2', '\x2', ':', ';', 
		'\a', '}', '\x2', '\x2', ';', '\t', '\x3', '\x2', '\x2', '\x2', '<', '=', 
		'\a', '\x7F', '\x2', '\x2', '=', '\v', '\x3', '\x2', '\x2', '\x2', '>', 
		'?', '\a', ']', '\x2', '\x2', '?', '\r', '\x3', '\x2', '\x2', '\x2', '@', 
		'\x41', '\a', '_', '\x2', '\x2', '\x41', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'\x42', '\x43', '\a', 'v', '\x2', '\x2', '\x43', '\x44', '\a', 't', '\x2', 
		'\x2', '\x44', '\x45', '\a', 'w', '\x2', '\x2', '\x45', '\x46', '\a', 
		'g', '\x2', '\x2', '\x46', '\x11', '\x3', '\x2', '\x2', '\x2', 'G', 'H', 
		'\a', 'h', '\x2', '\x2', 'H', 'I', '\a', '\x63', '\x2', '\x2', 'I', 'J', 
		'\a', 'n', '\x2', '\x2', 'J', 'K', '\a', 'u', '\x2', '\x2', 'K', 'L', 
		'\a', 'g', '\x2', '\x2', 'L', '\x13', '\x3', '\x2', '\x2', '\x2', 'M', 
		'N', '\a', 'p', '\x2', '\x2', 'N', 'O', '\a', 'w', '\x2', '\x2', 'O', 
		'P', '\a', 'n', '\x2', '\x2', 'P', 'Q', '\a', 'n', '\x2', '\x2', 'Q', 
		'\x15', '\x3', '\x2', '\x2', '\x2', 'R', 'S', '\a', '$', '\x2', '\x2', 
		'S', 'T', '\x3', '\x2', '\x2', '\x2', 'T', 'U', '\b', '\v', '\x2', '\x2', 
		'U', '\x17', '\x3', '\x2', '\x2', '\x2', 'V', 'X', '\a', '/', '\x2', '\x2', 
		'W', 'V', '\x3', '\x2', '\x2', '\x2', 'W', 'X', '\x3', '\x2', '\x2', '\x2', 
		'X', 'Y', '\x3', '\x2', '\x2', '\x2', 'Y', '`', '\x5', '\x1A', '\r', '\x2', 
		'Z', '\\', '\a', '\x30', '\x2', '\x2', '[', ']', '\t', '\x2', '\x2', '\x2', 
		'\\', '[', '\x3', '\x2', '\x2', '\x2', ']', '^', '\x3', '\x2', '\x2', 
		'\x2', '^', '\\', '\x3', '\x2', '\x2', '\x2', '^', '_', '\x3', '\x2', 
		'\x2', '\x2', '_', '\x61', '\x3', '\x2', '\x2', '\x2', '`', 'Z', '\x3', 
		'\x2', '\x2', '\x2', '`', '\x61', '\x3', '\x2', '\x2', '\x2', '\x61', 
		'\x63', '\x3', '\x2', '\x2', '\x2', '\x62', '\x64', '\x5', '\x1C', '\xE', 
		'\x2', '\x63', '\x62', '\x3', '\x2', '\x2', '\x2', '\x63', '\x64', '\x3', 
		'\x2', '\x2', '\x2', '\x64', '\x19', '\x3', '\x2', '\x2', '\x2', '\x65', 
		'n', '\a', '\x32', '\x2', '\x2', '\x66', 'j', '\t', '\x3', '\x2', '\x2', 
		'g', 'i', '\t', '\x2', '\x2', '\x2', 'h', 'g', '\x3', '\x2', '\x2', '\x2', 
		'i', 'l', '\x3', '\x2', '\x2', '\x2', 'j', 'h', '\x3', '\x2', '\x2', '\x2', 
		'j', 'k', '\x3', '\x2', '\x2', '\x2', 'k', 'n', '\x3', '\x2', '\x2', '\x2', 
		'l', 'j', '\x3', '\x2', '\x2', '\x2', 'm', '\x65', '\x3', '\x2', '\x2', 
		'\x2', 'm', '\x66', '\x3', '\x2', '\x2', '\x2', 'n', '\x1B', '\x3', '\x2', 
		'\x2', '\x2', 'o', 'q', '\t', '\x4', '\x2', '\x2', 'p', 'r', '\t', '\x5', 
		'\x2', '\x2', 'q', 'p', '\x3', '\x2', '\x2', '\x2', 'q', 'r', '\x3', '\x2', 
		'\x2', '\x2', 'r', 's', '\x3', '\x2', '\x2', '\x2', 's', 't', '\x5', '\x1A', 
		'\r', '\x2', 't', '\x1D', '\x3', '\x2', '\x2', '\x2', 'u', 'w', '\t', 
		'\x6', '\x2', '\x2', 'v', 'u', '\x3', '\x2', '\x2', '\x2', 'w', 'x', '\x3', 
		'\x2', '\x2', '\x2', 'x', 'v', '\x3', '\x2', '\x2', '\x2', 'x', 'y', '\x3', 
		'\x2', '\x2', '\x2', 'y', 'z', '\x3', '\x2', '\x2', '\x2', 'z', '{', '\b', 
		'\xF', '\x3', '\x2', '{', '\x1F', '\x3', '\x2', '\x2', '\x2', '|', '}', 
		'\a', '$', '\x2', '\x2', '}', '~', '\x3', '\x2', '\x2', '\x2', '~', '\x7F', 
		'\b', '\x10', '\x4', '\x2', '\x7F', '!', '\x3', '\x2', '\x2', '\x2', '\x80', 
		'\x81', '\a', '&', '\x2', '\x2', '\x81', '\x82', '\a', '\x66', '\x2', 
		'\x2', '\x82', '\x83', '\a', '\x63', '\x2', '\x2', '\x83', '\x84', '\a', 
		'v', '\x2', '\x2', '\x84', '\x85', '\a', '\x63', '\x2', '\x2', '\x85', 
		'#', '\x3', '\x2', '\x2', '\x2', '\x86', '\x87', '\a', '&', '\x2', '\x2', 
		'\x87', '\x88', '\a', 'y', '\x2', '\x2', '\x88', '\x89', '\a', 'j', '\x2', 
		'\x2', '\x89', '\x8A', '\a', 'g', '\x2', '\x2', '\x8A', '\x8B', '\a', 
		'p', '\x2', '\x2', '\x8B', '%', '\x3', '\x2', '\x2', '\x2', '\x8C', '\x8D', 
		'\a', '\x30', '\x2', '\x2', '\x8D', '\x93', '\x5', ',', '\x16', '\x2', 
		'\x8E', '\x8F', '\a', ']', '\x2', '\x2', '\x8F', '\x90', '\x5', '\x1A', 
		'\r', '\x2', '\x90', '\x91', '\a', '_', '\x2', '\x2', '\x91', '\x93', 
		'\x3', '\x2', '\x2', '\x2', '\x92', '\x8C', '\x3', '\x2', '\x2', '\x2', 
		'\x92', '\x8E', '\x3', '\x2', '\x2', '\x2', '\x93', '\x94', '\x3', '\x2', 
		'\x2', '\x2', '\x94', '\x92', '\x3', '\x2', '\x2', '\x2', '\x94', '\x95', 
		'\x3', '\x2', '\x2', '\x2', '\x95', '\x96', '\x3', '\x2', '\x2', '\x2', 
		'\x96', '\x97', '\a', '\x7F', '\x2', '\x2', '\x97', '\'', '\x3', '\x2', 
		'\x2', '\x2', '\x98', '\x99', '\a', '&', '\x2', '\x2', '\x99', '\x9A', 
		'\a', '}', '\x2', '\x2', '\x9A', '\x9F', '\x3', '\x2', '\x2', '\x2', '\x9B', 
		'\x9E', '\n', '\a', '\x2', '\x2', '\x9C', '\x9E', '\x5', '.', '\x17', 
		'\x2', '\x9D', '\x9B', '\x3', '\x2', '\x2', '\x2', '\x9D', '\x9C', '\x3', 
		'\x2', '\x2', '\x2', '\x9E', '\xA1', '\x3', '\x2', '\x2', '\x2', '\x9F', 
		'\xA0', '\x3', '\x2', '\x2', '\x2', '\x9F', '\x9D', '\x3', '\x2', '\x2', 
		'\x2', '\xA0', '\xA2', '\x3', '\x2', '\x2', '\x2', '\xA1', '\x9F', '\x3', 
		'\x2', '\x2', '\x2', '\xA2', '\xA3', '\a', '\x7F', '\x2', '\x2', '\xA3', 
		')', '\x3', '\x2', '\x2', '\x2', '\xA4', '\xA5', '\a', '&', '\x2', '\x2', 
		'\xA5', '\xA6', '\a', '}', '\x2', '\x2', '\xA6', '\xA7', '\a', '&', '\x2', 
		'\x2', '\xA7', '\xA8', '\a', 't', '\x2', '\x2', '\xA8', '\xA9', '\a', 
		'q', '\x2', '\x2', '\xA9', '\xAA', '\a', 'q', '\x2', '\x2', '\xAA', '\xAB', 
		'\a', 'v', '\x2', '\x2', '\xAB', '\xAC', '\x3', '\x2', '\x2', '\x2', '\xAC', 
		'\xAD', '\x5', '&', '\x13', '\x2', '\xAD', '+', '\x3', '\x2', '\x2', '\x2', 
		'\xAE', '\xB1', '\x5', '.', '\x17', '\x2', '\xAF', '\xB1', '\x5', '\x34', 
		'\x1A', '\x2', '\xB0', '\xAE', '\x3', '\x2', '\x2', '\x2', '\xB0', '\xAF', 
		'\x3', '\x2', '\x2', '\x2', '\xB1', '\xB2', '\x3', '\x2', '\x2', '\x2', 
		'\xB2', '\xB0', '\x3', '\x2', '\x2', '\x2', '\xB2', '\xB3', '\x3', '\x2', 
		'\x2', '\x2', '\xB3', '\xB6', '\x3', '\x2', '\x2', '\x2', '\xB4', '\xB6', 
		'\a', '&', '\x2', '\x2', '\xB5', '\xB0', '\x3', '\x2', '\x2', '\x2', '\xB5', 
		'\xB4', '\x3', '\x2', '\x2', '\x2', '\xB6', '-', '\x3', '\x2', '\x2', 
		'\x2', '\xB7', '\xBA', '\a', '^', '\x2', '\x2', '\xB8', '\xBB', '\t', 
		'\b', '\x2', '\x2', '\xB9', '\xBB', '\x5', '\x30', '\x18', '\x2', '\xBA', 
		'\xB8', '\x3', '\x2', '\x2', '\x2', '\xBA', '\xB9', '\x3', '\x2', '\x2', 
		'\x2', '\xBB', '/', '\x3', '\x2', '\x2', '\x2', '\xBC', '\xBD', '\a', 
		'w', '\x2', '\x2', '\xBD', '\xBE', '\x5', '\x32', '\x19', '\x2', '\xBE', 
		'\xBF', '\x5', '\x32', '\x19', '\x2', '\xBF', '\xC0', '\x5', '\x32', '\x19', 
		'\x2', '\xC0', '\xC1', '\x5', '\x32', '\x19', '\x2', '\xC1', '\x31', '\x3', 
		'\x2', '\x2', '\x2', '\xC2', '\xC3', '\t', '\t', '\x2', '\x2', '\xC3', 
		'\x33', '\x3', '\x2', '\x2', '\x2', '\xC4', '\xC5', '\n', '\n', '\x2', 
		'\x2', '\xC5', '\x35', '\x3', '\x2', '\x2', '\x2', '\x14', '\x2', '\x3', 
		'W', '^', '`', '\x63', 'j', 'm', 'q', 'x', '\x92', '\x94', '\x9D', '\x9F', 
		'\xB0', '\xB2', '\xB5', '\xBA', '\x5', '\a', '\x3', '\x2', '\b', '\x2', 
		'\x2', '\x6', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
