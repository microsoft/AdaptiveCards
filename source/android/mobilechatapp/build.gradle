// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
apply from: '../constants.gradle'
apply plugin: 'com.android.application'

android {
    compileSdkVersion project.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.example.mobilechatapp"
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.multidex:multidex:' + androidxMultidexVersion
    implementation 'androidx.annotation:annotation:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:' + junitVersion
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:' + androidxEspressoCoreVersion
    implementation project(path: ':adaptivecards')
}

task copyTestFiles(type: Copy) { duplicatesStrategy = DuplicatesStrategy.INCLUDE }

copyTestFiles {
    description = 'Copies test files to the assets folder'
    from '../../../samples/Tests'
    from '../../../samples/v1.0/Elements'
    from '../../../samples/v1.0/Scenarios'
    from '../../../samples/v1.1/Elements'
    from '../../../samples/v1.1/Scenarios'
    from '../../../samples/v1.2/Elements'
    from '../../../samples/v1.2/Scenarios'
    into 'src/main/assets'
}

preBuild.dependsOn copyTestFiles
clean.dependsOn copyTestFiles
build.dependsOn copyTestFiles