// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

#ifdef USE_WINUI3

#define Xaml_OM WinUI3
#define xaml Microsoft.UI.Xaml

#else // !USE_WINUI3

#define Xaml_OM Uwp
#define xaml Windows.UI.Xaml

import "Windows.Foundation.idl";
import "Windows.Data.Json.idl";

import "inspectable.idl";
import "Windows.Foundation.idl";
import "Windows.UI.Xaml.idl";
import "Windows.Data.Json.idl";
import "AdaptiveCards.ObjectModel.Shared.idl";

#endif // USE_WINUI3

namespace AdaptiveCards
{
    namespace Rendering
    {
        namespace Xaml_OM
        {
            runtimeclass AdaptiveHostConfigParseResult;

            enum ActionsOrientation
            {
                Vertical = 0,
                Horizontal,
            };

            enum ActionAlignment
            {
                Left = 0,
                Center,
                Right,
                Stretch,
            };

            enum ActionMode
            {
                Inline = 0,
                Popup,
            };

            enum IconPlacement
            {
                AboveTitle = 0,
                LeftOfTitle,
            };

            runtimeclass AdaptiveCardRenderer
            {
                AdaptiveCardRenderer();

                AdaptiveCardResourceResolvers ResourceResolvers { get; };
                AdaptiveHostConfig HostConfig;
                xaml.ResourceDictionary OverrideStyles;
                AdaptiveFeatureRegistration FeatureRegistration;

                Boolean OverflowMaxActions;
                String OverflowButtonText;
                String OverflowButtonAccessibilityText;

                void SetFixedDimensions(UInt32 desiredWidth, UInt32 desiredHeight);
                void ResetFixedDimensions();

                RenderedAdaptiveCard RenderAdaptiveCard(AdaptiveCards.ObjectModel.Xaml_OM.AdaptiveCard adaptiveCard);
                RenderedAdaptiveCard RenderAdaptiveCardFromJsonString(String adaptiveCard);
                RenderedAdaptiveCard RenderAdaptiveCardFromJson(Windows.Data.Json.JsonObject adaptiveCard);

                AdaptiveElementRendererRegistration ElementRenderers { get; };
                AdaptiveActionRendererRegistration ActionRenderers { get; };
            }

            runtimeclass AdaptiveActionEventArgs
            {
                AdaptiveCards.ObjectModel.Xaml_OM.IAdaptiveActionElement Action { get; };
                AdaptiveInputs Inputs { get; };
            }

            runtimeclass AdaptiveMediaEventArgs
            {
                AdaptiveCards.ObjectModel.Xaml_OM.AdaptiveMedia Media { get; };
            }

            runtimeclass AdaptiveContainerStyleDefinition
            {
                AdaptiveContainerStyleDefinition();

                Windows.UI.Color BackgroundColor;
                Windows.UI.Color BorderColor;
                AdaptiveColorsConfig ForegroundColors;
            }

            runtimeclass AdaptiveContainerStylesDefinition
            {
                AdaptiveContainerStylesDefinition();

                AdaptiveContainerStyleDefinition Default;
                AdaptiveContainerStyleDefinition Emphasis;
                AdaptiveContainerStyleDefinition Good;
                AdaptiveContainerStyleDefinition Attention;
                AdaptiveContainerStyleDefinition Warning;
                AdaptiveContainerStyleDefinition Accent;
            }

            runtimeclass AdaptiveFontSizesConfig
            {
                AdaptiveFontSizesConfig();

                UInt32 Small;
                UInt32 Default;
                UInt32 Medium;
                UInt32 Large;
                UInt32 ExtraLarge;
            }

            runtimeclass AdaptiveFontWeightsConfig
            {
                AdaptiveFontWeightsConfig();

                UInt16 Lighter;
                UInt16 Default;
                UInt16 Bolder;
            }

            runtimeclass AdaptiveFontTypeDefinition
            {
                AdaptiveFontTypeDefinition();

                String FontFamily;
                AdaptiveFontWeightsConfig FontWeights;
                AdaptiveFontSizesConfig FontSizes;
            }

            runtimeclass AdaptiveFontTypesDefinition
            {
                AdaptiveFontTypesDefinition();

                AdaptiveFontTypeDefinition Default;
                AdaptiveFontTypeDefinition Monospace;
            }

            runtimeclass AdaptiveHighlightColorConfig
            {
                AdaptiveHighlightColorConfig();

                Windows.UI.Color Default;
                Windows.UI.Color Subtle;
            }

            runtimeclass AdaptiveColorConfig
            {
                AdaptiveColorConfig();

                Windows.UI.Color Default;
                Windows.UI.Color Subtle;
                AdaptiveHighlightColorConfig HighlightColors;
            }

            runtimeclass AdaptiveColorsConfig
            {
                AdaptiveColorsConfig();

                AdaptiveColorConfig Default;
                AdaptiveColorConfig Accent;
                AdaptiveColorConfig Dark;
                AdaptiveColorConfig Light;
                AdaptiveColorConfig Good;
                AdaptiveColorConfig Warning;
                AdaptiveColorConfig Attention;
            }

            interface IAdaptiveTextStyleConfig
            {
                AdaptiveCards.ObjectModel.Xaml_OM.TextWeight Weight;
                AdaptiveCards.ObjectModel.Xaml_OM.TextSize Size;
                AdaptiveCards.ObjectModel.Xaml_OM.ForegroundColor Color;
                Boolean IsSubtle;
                AdaptiveCards.ObjectModel.Xaml_OM.FontType FontType;
            }

            runtimeclass AdaptiveTextStyleConfig : [default] IAdaptiveTextStyleConfig { AdaptiveTextStyleConfig(); }

            runtimeclass AdaptiveTextStylesConfig
            {
                AdaptiveTextStylesConfig();

                AdaptiveTextStyleConfig Heading;
                AdaptiveTextStyleConfig ColumnHeader;
            }

            runtimeclass AdaptiveFactSetTextConfig : IAdaptiveTextStyleConfig
            {
                AdaptiveFactSetTextConfig();

                Boolean Wrap;
                UInt32 MaxWidth;
            }

            runtimeclass AdaptiveSpacingConfig
            {
                AdaptiveSpacingConfig();

                UInt32 Small;
                UInt32 Default;
                UInt32 Medium;
                UInt32 Large;
                UInt32 ExtraLarge;
                UInt32 Padding;
            }

            runtimeclass AdaptiveSeparatorConfig
            {
                AdaptiveSeparatorConfig();

                UInt32 LineThickness;
                Windows.UI.Color LineColor;
            }

            runtimeclass AdaptiveImageSizesConfig
            {
                AdaptiveImageSizesConfig();

                UInt32 Small;
                UInt32 Medium;
                UInt32 Large;
            }

            runtimeclass AdaptiveImageSetConfig
            {
                AdaptiveImageSetConfig();

                AdaptiveCards.ObjectModel.Xaml_OM.ImageSize ImageSize;
                UInt32 MaxImageHeight;
            }

            runtimeclass AdaptiveImageConfig
            {
                AdaptiveImageConfig();

                AdaptiveCards.ObjectModel.Xaml_OM.ImageSize ImageSize;
            }

            runtimeclass AdaptiveCardConfig
            {
                AdaptiveCardConfig();

                Boolean AllowCustomStyle;
            }

            runtimeclass AdaptiveFactSetConfig
            {
                AdaptiveFactSetConfig();

                AdaptiveFactSetTextConfig Title;
                AdaptiveFactSetTextConfig Value;
                UInt32 Spacing;
            }

            runtimeclass AdaptiveShowCardActionConfig
            {
                AdaptiveShowCardActionConfig();

                ActionMode ActionMode;
                AdaptiveCards.ObjectModel.Xaml_OM.ContainerStyle Style;
                UInt32 InlineTopMargin;
            }

            runtimeclass AdaptiveActionsConfig
            {
                AdaptiveActionsConfig();

                AdaptiveShowCardActionConfig ShowCard;
                ActionsOrientation ActionsOrientation;
                ActionAlignment ActionAlignment;
                UInt32 ButtonSpacing;
                UInt32 MaxActions;
                AdaptiveCards.ObjectModel.Xaml_OM.Spacing Spacing;
                IconPlacement IconPlacement;
                UInt32 IconSize;
            }

            runtimeclass AdaptiveMediaConfig
            {
                AdaptiveMediaConfig();

                String DefaultPoster;
                String PlayButton;
                Boolean AllowInlinePlayback;
            }

            runtimeclass AdaptiveInputLabelConfig
            {
                AdaptiveInputLabelConfig();

                AdaptiveCards.ObjectModel.Xaml_OM.ForegroundColor Color;
                Boolean IsSubtle;
                AdaptiveCards.ObjectModel.Xaml_OM.TextSize Size;
                String Suffix;
                AdaptiveCards.ObjectModel.Xaml_OM.TextWeight Weight;
            }

            runtimeclass AdaptiveLabelConfig
            {
                AdaptiveLabelConfig();

                AdaptiveCards.ObjectModel.Xaml_OM.Spacing InputSpacing;

                AdaptiveInputLabelConfig RequiredInputs;
                AdaptiveInputLabelConfig OptionalInputs;
            }

            runtimeclass AdaptiveErrorMessageConfig
            {
                AdaptiveErrorMessageConfig();

                AdaptiveCards.ObjectModel.Xaml_OM.TextSize Size;
                AdaptiveCards.ObjectModel.Xaml_OM.Spacing Spacing;
                AdaptiveCards.ObjectModel.Xaml_OM.TextWeight Weight;
            }

            runtimeclass AdaptiveInputsConfig
            {
                AdaptiveInputsConfig();

                AdaptiveErrorMessageConfig ErrorMessage;
                AdaptiveLabelConfig Label;
            }

            runtimeclass AdaptiveTextBlockConfig
            {
                AdaptiveTextBlockConfig();

                UInt32 HeadingLevel;
            }

            runtimeclass AdaptiveTableConfig
            {
                AdaptiveTableConfig();

                UInt32 CellSpacing;
            }

            runtimeclass AdaptiveHostConfig
            {
                AdaptiveHostConfig();

                String FontFamily;
                AdaptiveFontSizesConfig FontSizes;
                AdaptiveFontWeightsConfig FontWeights;
                AdaptiveFontTypesDefinition FontTypes;
                Boolean SupportsInteractivity;
                String ImageBaseUrl;
                AdaptiveContainerStylesDefinition ContainerStyles;
                AdaptiveImageSizesConfig ImageSizes;
                AdaptiveSeparatorConfig Separator;
                AdaptiveSpacingConfig Spacing;
                AdaptiveCardConfig AdaptiveCard;
                AdaptiveImageSetConfig ImageSet;
                AdaptiveImageConfig Image;
                AdaptiveFactSetConfig FactSet;
                AdaptiveActionsConfig Actions;
                AdaptiveMediaConfig Media;
                AdaptiveInputsConfig Inputs;
                AdaptiveTextBlockConfig TextBlock;
                AdaptiveTextStylesConfig TextStyles;
                AdaptiveTableConfig Table;

                static AdaptiveHostConfigParseResult FromJsonString(String hostConfigJson);
                static AdaptiveHostConfigParseResult FromJson(Windows.Data.Json.JsonObject hostConfigJson);
            }

            runtimeclass AdaptiveHostConfigParseResult
            {
                AdaptiveHostConfigParseResult();

                AdaptiveHostConfig HostConfig { get; };
                Windows.Foundation.Collections.IVector<AdaptiveCards.ObjectModel.Xaml_OM.AdaptiveError> Errors { get; };
            }

            runtimeclass AdaptiveCardResourceResolvers
            {
                AdaptiveCardResourceResolvers();

                void Set(String scheme, IAdaptiveCardResourceResolver resolver);
                IAdaptiveCardResourceResolver Get(String scheme);
            }

            interface IAdaptiveCardResourceResolver
            {
                Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IRandomAccessStream> GetResourceStreamAsync(
                    AdaptiveCardGetResourceStreamArgs args);
            }

            runtimeclass AdaptiveCardGetResourceStreamArgs
            {
                AdaptiveCardGetResourceStreamArgs();

                Windows.Foundation.Uri Url { get; };

                [method_name("CreateAdaptiveCardGetResourceStreamArgs")] AdaptiveCardGetResourceStreamArgs(
                    Windows.Foundation.Uri uri);
            }

            runtimeclass RenderedAdaptiveCard
            {
                RenderedAdaptiveCard();

                AdaptiveCards.ObjectModel.Xaml_OM.AdaptiveCard OriginatingCard { get; };
                AdaptiveHostConfig OriginatingHostConfig { get; };
                xaml.FrameworkElement FrameworkElement { get; };
                AdaptiveInputs UserInputs { get; };
                Windows.Foundation.Collections.IVector<AdaptiveCards.ObjectModel.Xaml_OM.AdaptiveError> Errors { get; };
                Windows.Foundation.Collections.IVector<AdaptiveCards.ObjectModel.Xaml_OM.AdaptiveWarning> Warnings { get; };

                event Windows.Foundation.TypedEventHandler<RenderedAdaptiveCard, AdaptiveActionEventArgs> Action;
                event Windows.Foundation.TypedEventHandler<RenderedAdaptiveCard, AdaptiveMediaEventArgs> MediaClicked;
            }

            runtimeclass AdaptiveInputs
            {
                AdaptiveInputs();

                Windows.Data.Json.JsonObject AsJson();
                Windows.Foundation.Collections.ValueSet AsValueSet();

                Boolean ValidateInputs(AdaptiveCards.ObjectModel.Xaml_OM.IAdaptiveActionElement submitAction);
            }

            runtimeclass AdaptiveFeatureRegistration
            {
                AdaptiveFeatureRegistration();

                void Set(String name, String version);
                String Get(String name);
                void Remove(String name);
            }

            runtimeclass AdaptiveElementRendererRegistration
            {
                void Set(String type, IAdaptiveElementRenderer renderer);
                IAdaptiveElementRenderer Get(String type);
                void Remove(String type);
            }

            runtimeclass AdaptiveActionRendererRegistration
            {
                AdaptiveActionRendererRegistration();

                void Set(String type, IAdaptiveActionRenderer renderer);
                IAdaptiveActionRenderer Get(String type);
                void Remove(String type);
            }

            runtimeclass AdaptiveActionInvoker
            {
                AdaptiveActionInvoker();
                AdaptiveActionInvoker(RenderedAdaptiveCard renderResult);

                void SendActionEvent(AdaptiveCards.ObjectModel.Xaml_OM.IAdaptiveActionElement actionElement);
            }

            runtimeclass AdaptiveMediaEventInvoker
            {
                AdaptiveMediaEventInvoker();
                AdaptiveMediaEventInvoker(RenderedAdaptiveCard renderResult);

                void SendMediaClickedEvent(AdaptiveCards.ObjectModel.Xaml_OM.AdaptiveMedia mediaElement);
            }

            runtimeclass AdaptiveRenderArgs
            {
                AdaptiveRenderArgs();

                AdaptiveCards.ObjectModel.Xaml_OM.ContainerStyle ContainerStyle;
                IInspectable ParentElement;
                Boolean IsInShowCard;
                Boolean AllowAboveTitleIconPlacement;
                Boolean AncestorHasFallback;
                Boolean AddContainerPadding;
                AdaptiveCards.ObjectModel.Xaml_OM.AdaptiveCard ParentCard;
            }

            interface IAdaptiveInputValue
            {
                AdaptiveCards.ObjectModel.Xaml_OM.IAdaptiveInputElement InputElement { get; };
                String CurrentValue { get; };
                xaml.UIElement ErrorMessage
                {
                    get;
                    set;
                };
                Boolean Validate();
                void SetFocus();
            }

            runtimeclass AdaptiveRenderContext
            {
                AdaptiveRenderContext();

                AdaptiveHostConfig HostConfig { get; };
                AdaptiveFeatureRegistration FeatureRegistration { get; };
                AdaptiveElementRendererRegistration ElementRenderers { get; };
                AdaptiveActionRendererRegistration ActionRenderers { get; };
                AdaptiveCardResourceResolvers ResourceResolvers { get; };
                AdaptiveActionInvoker ActionInvoker { get; };
                AdaptiveMediaEventInvoker MediaEventInvoker { get; };
                xaml.ResourceDictionary OverrideStyles { get; };
                AdaptiveInputs UserInputs { get; };
                Windows.Foundation.IReference<Boolean> Rtl;
                Windows.Foundation.IReference<AdaptiveCards.ObjectModel.Xaml_OM.TextStyle> TextStyle;
                Windows.Foundation.IReference<AdaptiveCards.ObjectModel.Xaml_OM.HAlignment> HorizontalContentAlignment;

                void AddInputValue(IAdaptiveInputValue inputValue, AdaptiveRenderArgs renderArgs);
                void LinkSubmitActionToCard(AdaptiveCards.ObjectModel.Xaml_OM.IAdaptiveActionElement submitAction,
                                            AdaptiveRenderArgs renderArgs);
                void LinkCardToParent(AdaptiveCards.ObjectModel.Xaml_OM.AdaptiveCard card, AdaptiveRenderArgs renderArgs);
                IAdaptiveInputValue GetInputValue(AdaptiveCards.ObjectModel.Xaml_OM.IAdaptiveInputElement inputElement);

                void AddError(AdaptiveCards.ObjectModel.Xaml_OM.ErrorStatusCode statusCode, String message);
                void AddWarning(AdaptiveCards.ObjectModel.Xaml_OM.WarningStatusCode statusCode, String message);
            }

            interface IAdaptiveElementRenderer
            {
                xaml.UIElement Render(AdaptiveCards.ObjectModel.Xaml_OM.IAdaptiveCardElement element,
                                      AdaptiveRenderContext context,
                                      AdaptiveRenderArgs renderArgs);
            }

            interface IAdaptiveActionRenderer
            {
                xaml.UIElement Render(AdaptiveCards.ObjectModel.Xaml_OM.IAdaptiveActionElement element,
                                      AdaptiveRenderContext context,
                                      AdaptiveRenderArgs renderArgs);
            }

            [default_interface] runtimeclass AdaptiveTableRenderer : IAdaptiveElementRenderer
            {
                AdaptiveTableRenderer();
            }

            [default_interface] runtimeclass AdaptiveTextBlockRenderer : IAdaptiveElementRenderer
            {
                AdaptiveTextBlockRenderer();
            }

            [default_interface] runtimeclass AdaptiveRichTextBlockRenderer : IAdaptiveElementRenderer
            {
                AdaptiveRichTextBlockRenderer();
            }

            [default_interface] runtimeclass AdaptiveImageRenderer : IAdaptiveElementRenderer
            {
                AdaptiveImageRenderer();
            }

            [default_interface] runtimeclass AdaptiveImageSetRenderer : IAdaptiveElementRenderer
            {
                AdaptiveImageSetRenderer();
            }

            [default_interface] runtimeclass AdaptiveContainerRenderer : IAdaptiveElementRenderer
            {
                AdaptiveContainerRenderer();
            }

            [default_interface] runtimeclass AdaptiveColumnRenderer : IAdaptiveElementRenderer
            {
                AdaptiveColumnRenderer();
            }

            [default_interface] runtimeclass AdaptiveColumnSetRenderer : IAdaptiveElementRenderer
            {
                AdaptiveColumnSetRenderer();
            }

            [default_interface] runtimeclass AdaptiveChoiceSetInputRenderer : IAdaptiveElementRenderer
            {
                AdaptiveChoiceSetInputRenderer();
            }

            [default_interface] runtimeclass AdaptiveDateInputRenderer : IAdaptiveElementRenderer
            {
                AdaptiveDateInputRenderer();
            }

            [default_interface] runtimeclass AdaptiveNumberInputRenderer : IAdaptiveElementRenderer
            {
                AdaptiveNumberInputRenderer();
            }

            [default_interface] runtimeclass AdaptiveTextInputRenderer : IAdaptiveElementRenderer
            {
                AdaptiveTextInputRenderer();
            }

            [default_interface] runtimeclass AdaptiveTimeInputRenderer : IAdaptiveElementRenderer
            {
                AdaptiveTimeInputRenderer();
            }

            [default_interface] runtimeclass AdaptiveToggleInputRenderer : IAdaptiveElementRenderer
            {
                AdaptiveToggleInputRenderer();
            }

            [default_interface] runtimeclass AdaptiveFactSetRenderer : IAdaptiveElementRenderer
            {
                AdaptiveFactSetRenderer();
            }

            [default_interface] runtimeclass AdaptiveMediaRenderer : IAdaptiveElementRenderer
            {
                AdaptiveMediaRenderer();
            }

            [default_interface] runtimeclass AdaptiveActionSetRenderer : IAdaptiveElementRenderer
            {
                AdaptiveActionSetRenderer();
            }

            [default_interface] runtimeclass AdaptiveOpenUrlActionRenderer : IAdaptiveActionRenderer
            {
                AdaptiveOpenUrlActionRenderer();
            }

            [default_interface] runtimeclass AdaptiveShowCardActionRenderer : IAdaptiveActionRenderer
            {
                AdaptiveShowCardActionRenderer();
            }

            [default_interface] runtimeclass AdaptiveSubmitActionRenderer : IAdaptiveActionRenderer
            {
                AdaptiveSubmitActionRenderer();
            }

            [default_interface] runtimeclass AdaptiveExecuteActionRenderer : IAdaptiveActionRenderer
            {
                AdaptiveExecuteActionRenderer();
            }

            [default_interface] runtimeclass AdaptiveToggleVisibilityActionRenderer : IAdaptiveActionRenderer
            {
                AdaptiveToggleVisibilityActionRenderer();
            }

            runtimeclass TileControl : xaml.Controls.ContentControl
            {
                TileControl();

                xaml.UIElement ResolvedImage { get; };
                AdaptiveCards.ObjectModel.Xaml_OM.AdaptiveBackgroundImage BackgroundImage;
                Windows.Foundation.Size ImageSize;
                void LoadImageBrush(xaml.UIElement uielement);
            }

            runtimeclass WholeItemsPanel : xaml.Controls.Panel
            {
                WholeItemsPanel();

                String GetAltText();
                Boolean IsAllContentClippedOut();
                Boolean IsTruncated();
            }

            runtimeclass ElementTagContent
            {
                ElementTagContent();

                xaml.Controls.ColumnDefinition ColumnDefinition { get; };
                AdaptiveCards.ObjectModel.Xaml_OM.IAdaptiveCardElement CardElement { get; };
                xaml.UIElement Separator { get; };
                xaml.Controls.Panel ParentPanel { get; };
                Boolean ExpectedVisibility;
                Boolean IsStretchable;
            }
        }
    }
}
