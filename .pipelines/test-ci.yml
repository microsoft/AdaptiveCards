name: $(Year:yy).$(Month).$(DayOfMonth).$(rev:r)

pr:
  branches:
    include:
    - main
    - feature/*
    - release/*

trigger:
  branches:
    include:
    - main
    - feature/*
    - release/*
  batch: True

variables:
  solution: source/dotnet/AdaptiveCards.sln
  buildConfiguration: Release
  buildPlatform: x64

pool:
  name: Azure Pipelines
  vmImage: windows-2019

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk 5.x'
  inputs:
    version: 5.x

- task: UseDotNet@2
  displayName: 'Use .NET Core SDK 6.x'
  inputs:
    version: 6.x

- task: UseDotNet@2
  displayName: 'Use .NET Core sdk 8.x'
  inputs:
    version: 8.x

- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 5.x'
  inputs:
    versionSpec: 5.x

- task: NuGetAuthenticate@1
  name: NuGetAuthenticate2

- task: NuGetCommand@2
  displayName: NuGet restore
  inputs:
    command: 'restore'
    feedsToUse: config
    nugetConfigPath: source/nuget.config
    restoreSolution: $(solution)
    verbosityRestore: Detailed

- task: VSBuild@1
  name: VSBuild4
  displayName: Build solution
  inputs:
    solution: $(solution)
    vsVersion: 16.0
    platform: $(buildPlatform)
    configuration: $(buildConfiguration)
    maximumCpuCount: true
    createLogFile: true
    logFileVerbosity: detailed

- task: VSTest@2
  displayName: 'VsTest - testAssemblies'
  inputs:
    testAssemblyVer2: |
     **\!(ref)\*.test.dll
     !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)\source\dotnet'
    runInParallel: true
    runTestsInIsolation: true
    codeCoverageEnabled: true
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'
    failOnMinTestsNotRun: true
    diagnosticsEnabled: True

- task: PowerShell@1
  displayName: 'Run all tests'
  inputs:
    scriptName: source/dotnet/RunAllTests.ps1

- task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
  displayName: 'Component Detection'
